import { test, expect } from '@playwright/test';

test.describe('–ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ Infinite Scroll', () => {
  test('–¥–æ–ª–∂–µ–Ω –ø–æ–∑–≤–æ–ª—è—Ç—å –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –ø–æ–¥–≥—Ä—É–∂–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ', async ({ page }) => {
    console.log('üîç –¢–µ—Å—Ç –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è...');
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    await page.goto('/');
    console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');

    // –ñ–¥–µ–º –ø–æ–∫–∞ –≥—Ä–∞—Ñ–∏–∫ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è
    await page.waitForSelector('[data-testid="bitcoin-chart"]', { timeout: 30000 });
    console.log('‚úÖ –ì—Ä–∞—Ñ–∏–∫ –Ω–∞–π–¥–µ–Ω');

    // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    await page.waitForTimeout(3000);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≥—Ä–∞—Ñ–∏–∫ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –≤–∏–¥–∏–º
    const chartElement = await page.locator('[data-testid="bitcoin-chart"]');
    await expect(chartElement).toBeVisible();
    console.log('‚úÖ –ì—Ä–∞—Ñ–∏–∫ –≤–∏–¥–∏–º –∏ –≥–æ—Ç–æ–≤ –∫ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—é');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–ª–µ—Å–æ–º –º—ã—à–∏
    const chart = page.locator('[data-testid="bitcoin-chart"]');
    
    // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞
    const chartBox = await chart.boundingBox();
    expect(chartBox).toBeTruthy();
    
    console.log('üìä –†–∞–∑–º–µ—Ä—ã –≥—Ä–∞—Ñ–∏–∫–∞:', chartBox);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–Ω–æ–ø–∫–∏ —Ç–∞–π–º—Ñ—Ä–µ–π–º–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç
    await page.click('button:has-text("1H")');
    await page.waitForTimeout(2000);
    console.log('‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ 1H –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ');

    // –°–Ω–æ–≤–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ 5M –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è zoom
    await page.click('button:has-text("5M")');
    await page.waitForTimeout(2000);
    console.log('‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ 5M –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ');

    // –°–∏–º—É–ª–∏—Ä—É–µ–º –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ (wheel —Å–æ–±—ã—Ç–∏—è)
    await chart.hover();
    
    // Zoom in –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑
    for (let i = 0; i < 3; i++) {
      await page.mouse.wheel(0, -100); // Scroll up –¥–ª—è zoom in
      await page.waitForTimeout(500);
    }
    console.log('üîç –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ IN –≤—ã–ø–æ–ª–Ω–µ–Ω–æ');

    // –ñ–¥–µ–º –ø–æ–¥–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö (–µ—Å–ª–∏ —Å—Ä–∞–±–æ—Ç–∞–ª infinite scroll)
    await page.waitForTimeout(2000);

    // Zoom out –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑
    for (let i = 0; i < 5; i++) {
      await page.mouse.wheel(0, 100); // Scroll down –¥–ª—è zoom out
      await page.waitForTimeout(500);
    }
    console.log('üîç –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ OUT –≤—ã–ø–æ–ª–Ω–µ–Ω–æ');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏ (–µ—Å–ª–∏ —Å—Ä–∞–±–æ—Ç–∞–ª infinite scroll)
    try {
      const loadingIndicator = page.locator('text="–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ..."');
      if (await loadingIndicator.isVisible({ timeout: 1000 })) {
        console.log('üîÑ –û–±–Ω–∞—Ä—É–∂–µ–Ω –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ - infinite scroll —Ä–∞–±–æ—Ç–∞–µ—Ç!');
        // –ñ–¥–µ–º –æ–∫–æ–Ω—á–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
        await loadingIndicator.waitFor({ state: 'hidden', timeout: 10000 });
        console.log('‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
      } else {
        console.log('‚ÑπÔ∏è –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–µ –ø–æ—è–≤–∏–ª—Å—è (–≤–æ–∑–º–æ–∂–Ω–æ, –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ)');
      }
    } catch (error) {
      console.log('‚ÑπÔ∏è –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–µ –ø–æ—Ç—Ä–µ–±–æ–≤–∞–ª–∞—Å—å –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å –æ—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ—Ç JavaScript –æ—à–∏–±–æ–∫
    const errors = await page.evaluate(() => {
      const errors: string[] = [];
      if (window.console && window.console.error) {
        // –ó–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ –∫–æ–Ω—Å–æ–ª–∏
        const originalError = window.console.error;
        window.console.error = (...args) => {
          errors.push(args.join(' '));
          originalError.apply(window.console, args);
        };
      }
      return errors;
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≥—Ä–∞—Ñ–∏–∫ –ø–æ-–ø—Ä–µ–∂–Ω–µ–º—É –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
    await expect(chartElement).toBeVisible();
    
    console.log('‚úÖ –¢–µ—Å—Ç –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
  });

  test('–¥–æ–ª–∂–µ–Ω –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å drag –¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –ø–æ –≥—Ä–∞—Ñ–∏–∫—É', async ({ page }) => {
    console.log('üñ±Ô∏è –¢–µ—Å—Ç drag –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è...');
    
    await page.goto('/');
    await page.waitForSelector('[data-testid="bitcoin-chart"]', { timeout: 30000 });
    await page.waitForTimeout(3000);

    const chart = page.locator('[data-testid="bitcoin-chart"]');
    const chartBox = await chart.boundingBox();
    expect(chartBox).toBeTruthy();

    // –í—ã–ø–æ–ª–Ω—è–µ–º drag –æ–ø–µ—Ä–∞—Ü–∏—é (–ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞)
    const startX = chartBox!.x + chartBox!.width * 0.7;
    const startY = chartBox!.y + chartBox!.height * 0.5;
    const endX = chartBox!.x + chartBox!.width * 0.3;
    const endY = startY;

    await page.mouse.move(startX, startY);
    await page.mouse.down();
    await page.mouse.move(endX, endY, { steps: 10 });
    await page.mouse.up();

    console.log('üñ±Ô∏è Drag –æ–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');

    // –ñ–¥–µ–º –≤–æ–∑–º–æ–∂–Ω–æ–π –ø–æ–¥–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    await page.waitForTimeout(2000);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    try {
      const loadingIndicator = page.locator('text="–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ..."');
      if (await loadingIndicator.isVisible({ timeout: 1000 })) {
        console.log('üîÑ Infinite scroll —Å—Ä–∞–±–æ—Ç–∞–ª –ø—Ä–∏ drag!');
        await loadingIndicator.waitFor({ state: 'hidden', timeout: 10000 });
      }
    } catch (error) {
      console.log('‚ÑπÔ∏è –ü–æ–¥–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ drag –Ω–µ –ø–æ—Ç—Ä–µ–±–æ–≤–∞–ª–∞—Å—å');
    }

    await expect(chart).toBeVisible();
    console.log('‚úÖ –¢–µ—Å—Ç drag –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ');
  });
}); 