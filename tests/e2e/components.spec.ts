import { test, expect } from '@playwright/test';

/**
 * –¢–µ—Å—Ç—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */
test.describe('–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤', () => {
  test('–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤', async ({ page }) => {
    // –ó–∞—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    await page.goto('/');
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await page.waitForLoadState('networkidle');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    
    // 1. –ó–∞–≥–æ–ª–æ–≤–æ–∫
    await expect(page.locator('header h1')).toHaveText('–ë–∏—Ç–∫–æ–∏–Ω –∏ –õ—É–Ω–∞');
    
    // 2. –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
    await expect(page.locator('header button[aria-label*="—Ç–µ–º—É"]')).toBeVisible();
    
    // 3. –í–∏–¥–∂–µ—Ç –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö —Å–æ–±—ã—Ç–∏–π –∏–ª–∏ –±–ª–æ–∫ —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º —Å–æ–±—ã—Ç–∏–π
    const hasEventsWidget = await page.locator('text=–ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ —Å–æ–±—ã—Ç–∏—è').count() > 0;
    expect(hasEventsWidget).toBeTruthy();
    
    // 4. –ì—Ä–∞—Ñ–∏–∫
    await page.waitForSelector('canvas', { timeout: 10000 });
    const canvasElements = await page.locator('canvas').count();
    expect(canvasElements).toBeGreaterThan(0);
    
    // –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –Ω–µ –ø—Ä–æ–≤–µ—Ä—è—è –∏—Ö –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
  });
  
  test('–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞', async ({ page }) => {
    await page.goto('/');
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await page.waitForLoadState('networkidle');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤
    const timeframeExists = await page.locator('text=/^(1h|1d|1w)$/').count() > 0 || 
                            await page.locator('button:has-text("1d")').count() > 0 || 
                            await page.locator('[data-testid="timeframe-selector"]').count() > 0;
    
    if (timeframeExists) {
      // –ï—Å–ª–∏ —Å–µ–ª–µ–∫—Ç–æ—Ä –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å—Å—è –º–µ–∂–¥—É –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏
      try {
        // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É —Å —Ç–µ–∫—Å—Ç–æ–º "1w" (–Ω–µ–¥–µ–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª)
        const weeklyButton = page.locator('button:has-text("1w")').first();
        if (await weeklyButton.count() > 0) {
          await weeklyButton.click();
          
          // –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞
          await page.waitForTimeout(1000);
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–Ω–æ–ø–∫–∞ —Å—Ç–∞–ª–∞ –∞–∫—Ç–∏–≤–Ω–æ–π
          const isActive = await weeklyButton.evaluate((el) => {
            return el.classList.contains('active') || 
                   el.classList.contains('bg-blue-500') || 
                   el.getAttribute('aria-selected') === 'true';
          });
          
          expect(isActive).toBeTruthy();
        }
      } catch (e) {
        // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å —Å–µ–ª–µ–∫—Ç–æ—Ä–æ–º, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ –Ω–∞–ª–∏—á–∏–µ
        expect(timeframeExists).toBeTruthy();
      }
    }
  });
  
  test('–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ —Ü–µ–Ω–µ –±–∏—Ç–∫–æ–∏–Ω–∞', async ({ page }) => {
    await page.goto('/');
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await page.waitForLoadState('networkidle');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å —Ü–µ–Ω–æ–π –±–∏—Ç–∫–æ–∏–Ω–∞ –∏–ª–∏ –≥—Ä–∞—Ñ–∏–∫–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
    const priceElementExists = await page.locator('text=/[$‚Ç¨¬£¬•]|BTC|[–ë–±]–∏—Ç–∫–æ–∏–Ω|Bitcoin/i').count() > 0;
    
    if (priceElementExists) {
      // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç —Å —Ü–µ–Ω–æ–π –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
      const priceText = await page.evaluate(() => {
        const elements = Array.from(document.querySelectorAll('*'));
        for (const el of elements) {
          const text = el.textContent || '';
          if (/[$‚Ç¨¬£¬•]|BTC|[–ë–±]–∏—Ç–∫–æ–∏–Ω|Bitcoin/i.test(text) && /\d/.test(text)) {
            return text;
          }
        }
        return '';
      });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–∞–π–¥–µ–Ω —Ç–µ–∫—Å—Ç —Å —Ü–µ–Ω–æ–π –∏–ª–∏ –≥—Ä–∞—Ñ–∏–∫–æ–º
      const hasPrice = priceText !== '' || await page.locator('canvas').count() > 0;
      expect(hasPrice).toBeTruthy();
    } else {
      // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç —Å —Ü–µ–Ω–æ–π –Ω–µ –Ω–∞–π–¥–µ–Ω —è–≤–Ω–æ, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞
      const canvasExists = await page.locator('canvas').count() > 0;
      expect(canvasExists).toBeTruthy();
    }
  });
  
  test('–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–∂–µ—Ç–∞ –ª—É–Ω–Ω—ã—Ö —Ñ–∞–∑', async ({ page }) => {
    await page.goto('/');
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await page.waitForLoadState('networkidle');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤–∏–¥–∂–µ—Ç–∞ –ª—É–Ω–Ω—ã—Ö —Ñ–∞–∑ –∏–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–∑–∞—Ö –ª—É–Ω—ã
    // –í–∞—Ä–∏–∞–Ω—Ç 1: –ò—â–µ–º –ø–æ —Ç–µ–∫—Å—Ç—É –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏–ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    const moonTextExists = await page.evaluate(() => {
      const moonKeywords = [
        '–ª—É–Ω–∞', '–ª—É–Ω–Ω–∞—è', '—Ñ–∞–∑–∞', '–Ω–æ–≤–æ–ª—É–Ω–∏–µ', '–ø–æ–ª–Ω–æ–ª—É–Ω–∏–µ', 
        'moon', 'lunar', 'phase'
      ];
      
      const elements = Array.from(document.querySelectorAll('*'));
      for (const el of elements) {
        const text = (el.textContent || '').toLowerCase();
        if (moonKeywords.some(keyword => text.includes(keyword))) {
          return true;
        }
      }
      return false;
    });
    
    // –í–∞—Ä–∏–∞–Ω—Ç 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ª—É–Ω—ã –≤ –∏–∫–æ–Ω–∫–∞—Ö –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö
    const moonIconExists = await page.locator('img[alt*="–ª—É–Ω–∞"], img[alt*="moon"], [data-icon*="moon"]').count() > 0 ||
                           await page.locator('text="üåë"').count() > 0 ||
                           await page.locator('text="üåï"').count() > 0;
    
    // –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, —á—Ç–æ–±—ã –±—ã–ª —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –∏–ª–∏ –≥—Ä–∞—Ñ–∏–∫ —Å –¥–∞–Ω–Ω—ã–º–∏
    const hasCanvas = await page.locator('canvas').count() > 0;
    expect(moonTextExists || moonIconExists || hasCanvas).toBeTruthy();
  });
  
  test('–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–ª–æ–∫–∞ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö —Å–æ–±—ã—Ç–∏–π', async ({ page }) => {
    await page.goto('/');
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await page.waitForLoadState('networkidle');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –±–ª–æ–∫–∞ —Å–æ–±—ã—Ç–∏–π
    const hasEventsTitle = await page.locator('text=–ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ —Å–æ–±—ã—Ç–∏—è').count() > 0;
    
    if (hasEventsTitle) {
      // –ï—Å–ª–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤ —Ü–µ–ª–æ–º –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
      await expect(page.locator('header')).toBeVisible();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ canvas, –Ω–æ –Ω–µ –µ–≥–æ –≤–∏–¥–∏–º–æ—Å—Ç—å (—Ç.–∫. –∏—Ö –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ)
      const hasCanvas = await page.locator('canvas').count() > 0;
      expect(hasCanvas).toBeTruthy();
      
      // –≠—Ç–æ–≥–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è –±–∞–∑–æ–≤–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
      expect(hasEventsTitle).toBeTruthy();
    } else {
      // –ï—Å–ª–∏ –±–ª–æ–∫ —Å —Å–æ–±—ã—Ç–∏—è–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω, —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ
      // –ü—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å
      await expect(page.locator('header')).toBeVisible();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ canvas, –Ω–æ –Ω–µ –µ–≥–æ –≤–∏–¥–∏–º–æ—Å—Ç—å
      const hasCanvas = await page.locator('canvas').count() > 0;
      expect(hasCanvas).toBeTruthy();
      
      // –¢–µ—Å—Ç –Ω–µ –¥–æ–ª–∂–µ–Ω –ø–∞–¥–∞—Ç—å, –µ—Å–ª–∏ —ç—Ç–æ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –±–ª–æ–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
      test.skip(true, '–ë–ª–æ–∫ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö —Å–æ–±—ã—Ç–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
  });
}); 