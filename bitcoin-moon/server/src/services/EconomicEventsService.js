import logger from '../utils/logger.js';

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–º–∏ —Å–æ–±—ã—Ç–∏—è–º–∏
 */
class EconomicEventsService {
  constructor() {
    this.economicEvents = [
      {
        title: '–ó–∞—Å–µ–¥–∞–Ω–∏–µ –§–†–° –°–®–ê',
        description: '–†–µ—à–µ–Ω–∏–µ –ø–æ –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–π —Å—Ç–∞–≤–∫–µ',
        impact: 'high',
        category: 'monetary_policy',
        icon: 'üè¶'
      },
      {
        title: '–û—Ç—á–µ—Ç –ø–æ –∏–Ω—Ñ–ª—è—Ü–∏–∏ CPI',
        description: '–ò–Ω–¥–µ–∫—Å –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏—Ö —Ü–µ–Ω –°–®–ê',
        impact: 'high',
        category: 'inflation',
        icon: 'üìä'
      },
      {
        title: '–û—Ç—á–µ—Ç –ø–æ –∑–∞–Ω—è—Ç–æ—Å—Ç–∏ NFP',
        description: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤—ã—Ö —Ä–∞–±–æ—á–∏—Ö –º–µ—Å—Ç –≤ –°–®–ê',
        impact: 'high',
        category: 'employment',
        icon: 'üë•'
      },
      {
        title: '–ó–∞—Å–µ–¥–∞–Ω–∏–µ –ï–¶–ë',
        description: '–†–µ—à–µ–Ω–∏–µ –ï–≤—Ä–æ–ø–µ–π—Å–∫–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –±–∞–Ω–∫–∞',
        impact: 'medium',
        category: 'monetary_policy',
        icon: 'üá™üá∫'
      },
      {
        title: '–î–∞–Ω–Ω—ã–µ –ø–æ –í–í–ü',
        description: '–ö–≤–∞—Ä—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ —Ä–æ—Å—Ç—É —ç–∫–æ–Ω–æ–º–∏–∫–∏',
        impact: 'medium',
        category: 'gdp',
        icon: 'üìà'
      },
      {
        title: '–†–µ—à–µ–Ω–∏–µ –ë–∞–Ω–∫–∞ –Ø–ø–æ–Ω–∏–∏',
        description: '–ú–æ–Ω–µ—Ç–∞—Ä–Ω–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞ –Ø–ø–æ–Ω–∏–∏',
        impact: 'medium',
        category: 'monetary_policy',
        icon: 'üáØüáµ'
      },
      {
        title: '–ò–Ω–¥–µ–∫—Å PMI',
        description: '–ò–Ω–¥–µ–∫—Å –¥–µ–ª–æ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
        impact: 'low',
        category: 'business',
        icon: 'üè≠'
      },
      {
        title: '–î–∞–Ω–Ω—ã–µ –ø–æ —Ä–æ–∑–Ω–∏—á–Ω—ã–º –ø—Ä–æ–¥–∞–∂–∞–º',
        description: '–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
        impact: 'low',
        category: 'retail',
        icon: 'üõí'
      }
    ];
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è
   */
  generateUpcomingEvents(days = 30) {
    const events = [];
    const now = new Date();
    
    for (let i = 1; i <= days; i++) {
      const eventDate = new Date(now);
      eventDate.setDate(now.getDate() + i);
      
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏—è —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é
      if (Math.random() < 0.15) { // 15% –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å–æ–±—ã—Ç–∏—è –≤ –¥–µ–Ω—å
        const randomEvent = this.economicEvents[Math.floor(Math.random() * this.economicEvents.length)];
        
        events.push({
          id: `economic-${i}-${Date.now()}`,
          date: eventDate.toISOString(),
          title: randomEvent.title,
          description: randomEvent.description,
          impact: randomEvent.impact,
          category: randomEvent.category,
          icon: randomEvent.icon,
          type: 'economic'
        });
      }
    }
    
    return events.sort((a, b) => new Date(a.date) - new Date(b.date));
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è
   */
  async getUpcomingEvents(days = 30) {
    try {
      logger.debug(`EconomicEventsService: –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –Ω–∞ ${days} –¥–Ω–µ–π`);
      return this.generateUpcomingEvents(days);
    } catch (error) {
      logger.error('EconomicEventsService: –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–±—ã—Ç–∏–π:', error);
      throw error;
    }
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Å–æ–±—ã—Ç–∏—è –ø–æ –≤–∞–∂–Ω–æ—Å—Ç–∏
   */
  async getEventsByImportance(importance = 'high') {
    try {
      const events = this.generateUpcomingEvents(60);
      return events.filter(event => event.impact === importance);
    } catch (error) {
      logger.error('EconomicEventsService: –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –≤–∞–∂–Ω–æ—Å—Ç–∏:', error);
      throw error;
    }
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Å–æ–±—ã—Ç–∏—è –¥–ª—è –ø–µ—Ä–∏–æ–¥–∞
   */
  async getEventsForPeriod(startDate, endDate) {
    try {
      const start = new Date(startDate);
      const end = new Date(endDate);
      const diffTime = Math.abs(end - start);
      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
      
      const events = this.generateUpcomingEvents(diffDays + 30);
      
      return events.filter(event => {
        const eventDate = new Date(event.date);
        return eventDate >= start && eventDate <= end;
      });
    } catch (error) {
      logger.error('EconomicEventsService: –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –ø–µ—Ä–∏–æ–¥–∞:', error);
      throw error;
    }
  }
}

const economicEventsService = new EconomicEventsService();
export default economicEventsService;